plugins {
    id 'java'
    id 'war'
}
war {
    webAppDirName = 'src/main/webapp'
    archiveBaseName.set('ROOT')
}

def tomcatWebapps = "C:/Program Files/Apache Software Foundation/Tomcat 11.0_Tomcat8111/webapps"   // ⬅ Replace with your Tomcat webapps folder
def tomcatBin = "C:/Program Files/Apache Software Foundation/Tomcat 11.0_Tomcat8111/bin"            // ⬅ Replace with your Tomcat bin folder
tasks.register("deployToTomcat") {
    dependsOn tasks.named("war")

    doLast {
        def rootWar = file("${tomcatWebapps}/ROOT.war")
        def rootFolder = file("${tomcatWebapps}/ROOT")

        println "Stopping Tomcat..."
        exec {
            workingDir tomcatBin
            commandLine 'cmd', '/c', 'catalina.bat', 'stop'
            ignoreExitValue = true
        }

        println "Deleting old ROOT..."
        if (rootFolder.exists()) {
            rootFolder.deleteDir()
        }
        if (rootWar.exists()) {
            rootWar.delete()
        }

        println "Copying new ROOT.war..."
        copy {
            from(tasks.named("war").get().archiveFile)
            into(tomcatWebapps)
            rename { "ROOT.war" }
        }

        println "Starting Tomcat..."
        exec {
            workingDir tomcatBin
            commandLine 'cmd', '/c', 'catalina.bat', 'start'
        }

        println "✅ Deployment completed."
    }
}

group = 'org.springframework'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    //for sprinf core IOC & DI
    implementation 'org.springframework:spring-context:6.1.4'

    //for predestroy and postinit spring bean annotations from java
    implementation 'jakarta.annotation:jakarta.annotation-api:3.0.0'

    //Spring ascpect aop
    implementation 'org.springframework:spring-aop:6.2.1'

    //aspectWeaver
    implementation 'org.aspectj:aspectjweaver:1.9.24'

    //logging interface abstraction layer
    implementation 'org.slf4j:slf4j-api:2.0.17'

    //log4j loggin implmentation
    implementation 'org.apache.logging.log4j:log4j-api:2.25.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.25.0'
    implementation 'org.apache.logging.log4j:log4j-slf4j2-impl:2.25.0'

    //spring mvc
    implementation 'org.springframework:spring-webmvc:6.1.4'
    compileOnly 'jakarta.servlet:jakarta.servlet-api:6.1.0'
    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:3.0.2'


    //spring data



    implementation 'org.springframework:spring-orm:6.1.4'
    implementation 'org.springframework.data:spring-data-jpa:3.2.4'

    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation 'org.hibernate.orm:hibernate-core:6.4.4.Final'

    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'com.zaxxer:HikariCP:5.1.0'




}

test {
    useJUnitPlatform()
}